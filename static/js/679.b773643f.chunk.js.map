{"version":3,"file":"static/js/679.b773643f.chunk.js","mappings":"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","sources":["Components/TaskOne/ProductsTable.jsx","Components/TaskOne/ColumnVisibilityToggle.jsx","Components/TaskOne/ExportButtons.jsx","Components/TaskOne/DataTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport DataTable from './DataTable';\r\nimport axios from 'axios';\r\n\r\n\r\nconst initialColumns = [\r\n  {\r\n    key: 'id',\r\n    label: 'ID',\r\n    sortable: true,\r\n    filterable: true,\r\n    exportable: true,\r\n    visible: true\r\n  },\r\n  {\r\n    key: 'title',\r\n    label: 'Title',\r\n    sortable: true,\r\n    filterable: true,\r\n    exportable: true,\r\n    visible: true\r\n  },\r\n  {\r\n    key: 'price',\r\n    label: 'Price',\r\n    sortable: true,\r\n    filterable: false,\r\n    exportable: true,\r\n    visible: true,\r\n    format: (value) => `$${value}`\r\n  },\r\n  {\r\n    key: 'stock',\r\n    label: 'Stock',\r\n    sortable: true,\r\n    filterable: false,\r\n    exportable: true,\r\n    visible: true\r\n  },\r\n  {\r\n    key: 'category',\r\n    label: 'Category',\r\n    sortable: true,\r\n    filterable: true,\r\n    exportable: true,\r\n    visible: true\r\n  },\r\n  {\r\n    key: 'actions',\r\n    label: 'Actions',\r\n    render: (row) => <button onClick={() => alert(`Product ID: ${row.id}`)} className='btn btn-success btn-sm'>View</button>,\r\n    visible: true\r\n  }\r\n];\r\n\r\nconst ProductsTable = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [columns, setColumns] = useState(initialColumns);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const toggleColumn = (key) => {\r\n    setColumns((prevCols) =>\r\n      prevCols.map((col) =>\r\n        col.key === key ? { ...col, visible: !col.visible } : col\r\n      )\r\n    );\r\n  };\r\n\r\n useEffect(() => {\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('https://dummyjson.com/products');\r\n      setProducts(response.data.products);\r\n      setLoading(false);\r\n    } catch (error) {\r\n         setProducts([]);\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  fetchProducts();\r\n}, []);\r\n\r\n  return (\r\n    <>\r\n     \r\n      <DataTable columns={columns} data={products} isLoading={loading} error={error} toggleColumn={toggleColumn} title=\"Products Table\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsTable;","import React from 'react';\r\n\r\nconst ColumnVisibilityToggle = ({ columns, toggleColumn }) => {\r\n  return (\r\n    <div style={{ marginBottom: '1rem' }}>\r\n      <label><strong>Toggle Columns:</strong></label>\r\n      <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginTop: '5px' }}>\r\n        {columns.map((col) => (\r\n          col.key !== 'actions' && (\r\n            <label key={col.key}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={col.visible}\r\n                onChange={() => toggleColumn(col.key)}\r\n                disabled={columns.filter(c => c.visible).length === 1 && col.visible}\r\n              />\r\n              {col.label}\r\n            </label>\r\n          )\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnVisibilityToggle;\r\n","import jsPDF from 'jspdf';\r\nimport React from 'react';\r\nimport 'jspdf-autotable';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { FaFileExcel, FaRegFilePdf } from 'react-icons/fa';\r\nimport { LuFileJson } from 'react-icons/lu';\r\nconst exportToCSV = (data, columns, fileName = 'export.csv') => {\r\n  const visibleCols = columns.filter((col) => col.visible && col.exportable !== false);\r\n  const headers = visibleCols.map((col) => col.label);\r\n  const rows = data.map((row) =>\r\n    visibleCols.map((col) => {\r\n      const value = row[col.key];\r\n      return col.format ? col.format(value) : value;\r\n    })\r\n  );\r\n\r\n  let csvContent =\r\n    [headers.join(','), ...rows.map((r) => r.join(','))].join('\\n');\r\n\r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n  const link = document.createElement('a');\r\n  link.href = URL.createObjectURL(blob);\r\n  link.download = fileName;\r\n  link.click();\r\n};\r\n\r\n\r\nconst exportToJSON = (data, columns, fileName = 'export.json') => {\r\n  const visibleCols = columns.filter((col) => col.visible && col.exportable !== false);\r\n  const filteredData = data.map((row) => {\r\n    const newObj = {};\r\n    visibleCols.forEach((col) => {\r\n      newObj[col.label] = col.format ? col.format(row[col.key]) : row[col.key];\r\n    });\r\n    return newObj;\r\n  });\r\n\r\n  const blob = new Blob([JSON.stringify(filteredData, null, 2)], {\r\n    type: 'application/json',\r\n  });\r\n  const link = document.createElement('a');\r\n  link.href = URL.createObjectURL(blob);\r\n  link.download = fileName;\r\n  link.click();\r\n};\r\n const exportToPDF = (data, columns) => {\r\n    const doc = new jsPDF();\r\n    const visibleColumns = columns.filter(col => col.exportable !== false && col.visible !== false);\r\n\r\n    const tableColumn = visibleColumns.map(col => col.label);\r\n    const tableRows = data.map(row =>\r\n      visibleColumns.map(col => row[col.key])\r\n    );\r\n\r\n   autoTable(doc, {\r\n    head: [tableColumn],\r\n    body: tableRows,\r\n    startY: 20,\r\n    styles: {\r\n      fontSize: 10,\r\n    },\r\n    headStyles: {\r\n      fillColor: [59, 130, 246], \r\n    },\r\n  });\r\n\r\n  doc.save('table_data.pdf');\r\n  };\r\n\r\nconst ExportButtons = ({ data, columns }) => (\r\n  <div style={{ marginBottom: '1rem' }}>\r\n    <button onClick={() => exportToCSV(data, columns)}>Export CSV   <FaFileExcel style={{color:\"green\"}}/></button>\r\n    <button onClick={() => exportToJSON(data, columns)}>Export JSON <LuFileJson/></button>\r\n    <button onClick={()=>exportToPDF(data,columns)}>Export PDF  <FaRegFilePdf  style={{color:\"red\"}}/></button>\r\n  </div>\r\n);\r\n\r\nexport default ExportButtons;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport ColumnVisibilityToggle from './ColumnVisibilityToggle';\r\nimport ExportButtons from './ExportButtons';\r\n\r\n\r\n\r\nconst DataTable = ({ columns, data = [], isLoading = false, error = null,toggleColumn ,title}) => {\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\r\n  const [filterText, setFilterText] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  const visibleColumns = useMemo(() => columns.filter(col => col.visible !== false), [columns]);\r\n\r\n  const sortedData = useMemo(() => {\r\n    if (!sortConfig.key) return data;\r\n    const sorted = [...data].sort((a, b) => {\r\n      const aValue = a[sortConfig.key];\r\n      const bValue = b[sortConfig.key];\r\n      if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n        return sortConfig.direction === 'asc' ? aValue - bValue : bValue - aValue;\r\n      }\r\n      return sortConfig.direction === 'asc'\r\n        ? String(aValue).localeCompare(String(bValue))\r\n        : String(bValue).localeCompare(String(aValue));\r\n    });\r\n    return sorted;\r\n  }, [data, sortConfig]);\r\n\r\n  const filteredData = useMemo(() => {\r\n    return sortedData.filter(row =>\r\n      visibleColumns.some(col =>\r\n        String(row[col.key]).toLowerCase().includes(filterText.toLowerCase())\r\n      )\r\n    );\r\n  }, [sortedData, filterText, visibleColumns]);\r\n\r\n  const paginatedData = useMemo(() => {\r\n    const start = (currentPage - 1) * pageSize;\r\n    return filteredData.slice(start, start + pageSize);\r\n  }, [filteredData, currentPage, pageSize]);\r\n\r\n  const totalPages = Math.ceil(filteredData.length / pageSize);\r\n\r\n  const requestSort = key => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  if (isLoading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n  if (!data.length) return <p>No data available</p>;\r\n\r\n  return (\r\n    <>\r\n     <div className='innerheader'>\r\n <h1>{title}</h1>\r\n        </div>\r\n      <div className=\"table-toolbar\">\r\n\r\n  <div className=\"toolbar-section\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Search...\"\r\n      value={filterText}\r\n      onChange={e => setFilterText(e.target.value)}\r\n      className=\"search-input\"\r\n    />\r\n  </div>\r\n\r\n <div className=\"toolbar-section column-toggle\">\r\n    <ColumnVisibilityToggle columns={columns} toggleColumn={toggleColumn} />\r\n  </div>\r\n  <div className=\"toolbar-section export-buttons\">\r\n    <ExportButtons data={data} columns={columns} />\r\n  </div>\r\n\r\n \r\n \r\n</div>\r\n\r\n<div className=\"datatable\">\r\n    \r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {visibleColumns.map(col => (\r\n              <th key={col.key} onClick={() => col.sortable && requestSort(col.key)}>\r\n                {col.label}\r\n                {sortConfig.key === col.key && (sortConfig.direction === 'asc' ? ' ▲' : ' ▼')}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {paginatedData.map((row, i) => (\r\n            <tr key={i}>\r\n              {visibleColumns.map(col => (\r\n                <td key={col.key}>\r\n                  {col.render ? col.render(row) : col.format ? col.format(row[col.key]) : row[col.key]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n <nav className=\"pagination-container\">\r\n  <ul className=\"pagination\">\r\n    <li className=\"page-item\">\r\n      <button\r\n        className=\"page-link\"\r\n        onClick={() => setCurrentPage(p => Math.max(p - 1, 1))}\r\n        disabled={currentPage === 1}\r\n      >\r\n        Prev\r\n      </button>\r\n    </li>\r\n\r\n    {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\r\n      <li key={page} className={`page-item ${page === currentPage ? 'active' : ''}`}>\r\n        <button className=\"page-link\" onClick={() => setCurrentPage(page)}>\r\n          {page}\r\n        </button>\r\n      </li>\r\n    ))}\r\n\r\n    <li className=\"page-item\">\r\n      <button\r\n        className=\"page-link\"\r\n        onClick={() => setCurrentPage(p => Math.min(p + 1, totalPages))}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        Next\r\n      </button>\r\n    </li>\r\n  </ul>\r\n\r\n  <div className=\"pagination-options\">\r\n    <span>\r\n      Page {currentPage} of {totalPages}\r\n    </span>\r\n    <select onChange={e => setPageSize(Number(e.target.value))} value={pageSize}>\r\n      {[10, 25, 50, 100].map(size => (\r\n        <option key={size} value={size}>\r\n          {size} per page\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n</nav>\r\n\r\n    </div>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"names":["initialColumns","key","label","sortable","filterable","exportable","visible","format","value","concat","render","row","_jsx","onClick","alert","id","className","children","ProductsTable","products","setProducts","useState","columns","setColumns","loading","setLoading","error","setError","useEffect","async","response","axios","get","data","message","fetchProducts","_Fragment","DataTable","isLoading","toggleColumn","prevCols","map","col","_objectSpread","title","_ref","_jsxs","style","marginBottom","display","gap","flexWrap","marginTop","type","checked","onChange","disabled","filter","c","length","fileName","arguments","undefined","visibleCols","headers","rows","csvContent","join","r","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","exportToCSV","FaFileExcel","color","filteredData","newObj","forEach","JSON","stringify","exportToJSON","LuFileJson","exportToPDF","doc","jsPDF","visibleColumns","tableColumn","tableRows","autoTable","head","body","startY","styles","fontSize","headStyles","fillColor","save","FaRegFilePdf","sortConfig","setSortConfig","direction","filterText","setFilterText","currentPage","setCurrentPage","pageSize","setPageSize","useMemo","sortedData","sort","a","b","aValue","bValue","String","localeCompare","some","toLowerCase","includes","paginatedData","start","slice","totalPages","Math","ceil","placeholder","e","target","ColumnVisibilityToggle","ExportButtons","requestSort","i","p","max","Array","from","_","page","min","Number","size"],"sourceRoot":""}