{"version":3,"file":"static/js/521.d0ae699c.chunk.js","mappings":"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","sources":["Components/Dashboard/mockdata.js","Components/Dashboard/KPI.jsx","Components/Dashboard/ModernDashboard.jsx"],"sourcesContent":[" export const mockData = {\r\n      overview: {\r\n        totalRevenue: 125400,\r\n        revenueChange: 12.5,\r\n        totalUsers: 8465,\r\n        usersChange: -2.3\r\n      },\r\n      charts: {\r\n        revenueByMonth: [\r\n          { month: 'Jan', revenue: 4200, users: 1200 },\r\n          { month: 'Feb', revenue: 5100, users: 1350 },\r\n          { month: 'Mar', revenue: 6200, users: 1500 }\r\n        ],\r\n        trafficSources: [\r\n          { source: 'Organic Search', value: 45, color: '#10b981' },\r\n          { source: 'Social Media', value: 25, color: '#3b82f6' },\r\n          { source: 'Direct', value: 20, color: '#f59e0b' },\r\n          { source: 'Referral', value: 10, color: '#ef4444' }\r\n        ],\r\n        topProducts: [\r\n          { name: 'Premium Plan', sales: 1250, revenue: 25000 },\r\n          { name: 'Basic Plan', sales: 850, revenue: 12750 },\r\n          { name: 'Enterprise Plan', sales: 320, revenue: 16000 }\r\n        ]\r\n      },\r\n      recentActivity: [\r\n        {\r\n          id: 1,\r\n          type: 'sale',\r\n          message: 'New order #12345 received',\r\n          value: '$250.00',\r\n          timestamp: '2024-06-18T10:30:00Z',\r\n          status: 'success'\r\n        },\r\n        {\r\n          id: 2,\r\n          type: 'user',\r\n          message: 'New user registration',\r\n          value: 'john.doe@email.com',\r\n          timestamp: '2024-06-18T09:15:00Z',\r\n          status: 'info'\r\n        }\r\n      ]\r\n    };","import { useEffect, useState } from \"react\";\r\n\r\nconst KPI = ({ title, value, change, trend, icon, color }) => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let start = 0;\r\n    const end = value;\r\n    const duration = 1000;\r\n    const increment = end / (duration / 16);\r\n\r\n    const animate = () => {\r\n      start += increment;\r\n      if (start < end) {\r\n        setCount(Math.floor(start));\r\n        requestAnimationFrame(animate);\r\n      } else {\r\n        setCount(end);\r\n      }\r\n    };\r\n\r\n    animate();\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={`kpi-card ${color}`}>\r\n      <div className=\"kpi-header\">\r\n        <span className=\"icon\">üìä</span>\r\n        <div className=\"details\">\r\n          <h4>{title}</h4>\r\n          <h2>{Math.floor(count).toLocaleString()}</h2>\r\n          <p className={`trend ${trend}`}>{change}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default KPI","import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\nimport { mockData } from './mockdata';\r\nimport KPI from './KPI';\r\n\r\n\r\n\r\nconst ModernDashboard = () => {\r\n  const [data, setData] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    setData(mockData);\r\n  }, []);\r\n\r\n  if (!data) return <p>Loading...</p>;\r\n\r\n  const { overview, charts, recentActivity } = data;\r\n\r\n  return (\r\n    <div className={`dashboard-container ${darkMode ? 'dark' : ''}`}>\r\n      <div className=\"dashboard-topbar\">\r\n        <h1>Executive Business Dashboard</h1>\r\n        <button onClick={() => setDarkMode((prev) => !prev)} className=\"dark-toggle\">\r\n          {darkMode ? '‚òÄÔ∏è Light' : 'üåô Dark'} Mode\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"kpi-grid\">\r\n        <KPI\r\n          title=\"Total Revenue\"\r\n          value={overview.totalRevenue}\r\n          change={`+${overview.revenueChange}%`}\r\n          trend=\"up\"\r\n          icon=\"trending-up\"\r\n          color=\"success\"\r\n        />\r\n        <KPI\r\n          title=\"Active Users\"\r\n          value={overview.totalUsers}\r\n          change={`${overview.usersChange}%`}\r\n          trend=\"down\"\r\n          icon=\"users\"\r\n          color=\"warning\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h3>Revenue Trend</h3>\r\n          <ResponsiveContainer width=\"100%\" height={250}>\r\n            <LineChart data={charts.revenueByMonth}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"month\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#3b82f6\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"chart-card\">\r\n          <h3>Traffic Sources</h3>\r\n          <ResponsiveContainer width=\"100%\" height={250}>\r\n            <PieChart>\r\n              <Tooltip />\r\n              <Pie\r\n                data={charts.trafficSources}\r\n                dataKey=\"value\"\r\n                nameKey=\"source\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                outerRadius={80}\r\n                label\r\n              >\r\n                {charts.trafficSources.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={entry.color} />\r\n                ))}\r\n              </Pie>\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"chart-card\">\r\n          <h3>Product Performance</h3>\r\n          <ResponsiveContainer width=\"100%\" height={250}>\r\n            <BarChart data={charts.topProducts} layout=\"vertical\">\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis type=\"number\" />\r\n              <YAxis dataKey=\"name\" type=\"category\" />\r\n              <Tooltip />\r\n              <Bar dataKey=\"revenue\" fill=\"#10b981\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"activity-section\">\r\n        <h3>Recent Activity</h3>\r\n        <ul className=\"activity-list\">\r\n          {recentActivity.map((activity) => (\r\n            <li key={activity.id} className={`activity-item ${activity.status}`}>\r\n              <div className=\"message\">{activity.message}</div>\r\n              <div className=\"value\">{activity.value}</div>\r\n              <div className=\"timestamp\">{new Date(activity.timestamp).toLocaleString()}</div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModernDashboard;\r\n"],"names":["mockData","overview","totalRevenue","revenueChange","totalUsers","usersChange","charts","revenueByMonth","month","revenue","users","trafficSources","source","value","color","topProducts","name","sales","recentActivity","id","type","message","timestamp","status","_ref","title","change","trend","icon","count","setCount","useState","useEffect","start","end","increment","animate","Math","floor","requestAnimationFrame","_jsx","className","concat","children","_jsxs","toLocaleString","ModernDashboard","data","setData","darkMode","setDarkMode","onClick","prev","KPI","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","strokeWidth","PieChart","Pie","nameKey","cx","cy","outerRadius","label","map","entry","index","Cell","fill","BarChart","layout","Bar","activity","Date"],"sourceRoot":""}